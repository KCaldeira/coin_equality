{
  "run_name": "iterative_refinement_test_GN_ISRES",
  "description": "Test of iterative refinement optimization with 4 iterations",

  "scalar_parameters": {
    "alpha": 0.3,
    "_alpha": "Capital share of income",
    "delta": 0.10,
    "_delta": "Capital depreciation rate (10% per year)",
    "s": 0.3,
    "_s": "Savings rate (30% of net production)",
    "k_damage_coeff": 0.05,
    "_k_damage_coeff": "Climate damage coefficient for people making epsilon $ per year",
    "k_damage_exp": 2.0,
    "_k_damage_exp": "Climate damage exponent (2 means quadratic)",
    "k_damage_halfsat": 10000.0,
    "_k_damage_halfsat": "Income level ($) at which climate damage is half of maximum (lower = more regressive damage)",
    "k_climate": 0.5e-12,
    "_k_climate": "Temperature sensitivity to cumulative emissions (K/tCO2)",
    "eta": 1.5,
    "_eta": "Coefficient of relative risk aversion",
    "rho": 0.01,
    "_rho": "Pure rate of time preference (1% per year)",
    "Gini_initial": 0.67,
    "_Gini_initial": "Initial Gini index (moderate inequality)",
    "Gini_fract": 0.10,
    "_Gini_fract": "Fraction of effective Gini change that occurs as instantaneous step",
    "Gini_restore": 0.10,
    "_Gini_restore": "Rate at which Gini restores to initial value (yr^-1)",
    "deltaL": 0.02,
    "_deltaL": "Fraction of income available for redistribution (2%)",
    "theta2": 2.0,
    "_theta2": "Abatement cost exponent (quadratic)"
  },

  "time_functions": {
    "_description": "Time-dependent exogenous functions",
    "A": {
      "_description": "Total factor productivity (TFP)",
      "type": "exponential_growth",
      "initial_value": 454.174,
      "growth_rate": 0.01,
      "_growth_rate": "1% annual TFP growth"
    },
    "L": {
      "_description": "Population",
      "type": "exponential_growth",
      "initial_value": 10e9,
      "growth_rate": 0.01,
      "_growth_rate": "1% annual population growth"
    },
    "sigma": {
      "_description": "Carbon intensity of GDP",
      "type": "exponential_growth",
      "initial_value": 0.0005,
      "growth_rate": -0.02,
      "_growth_rate": "Declining at 2% per year (decarbonization)"
    },
    "theta1": {
      "_description": "Abatement cost per ton of CO2 for the last ton abated ($/tCO2)",
      "type": "exponential_growth",
      "initial_value": 1000,
      "growth_rate": -0.02,
      "_growth_rate": "Declining at 2% per year (technological progress)"
    }
  },

  "integration_parameters": {
    "_description": "Time integration settings",
    "t_start": 0.0,
    "t_end": 300,
    "_t_end": "Integrate for 300 years",
    "dt": 1.0,
    "_dt": "1-year time step (Euler method)",
    "rtol": 1e-6,
    "atol": 1e-9,
    "_tolerances": "Reserved for future adaptive solvers",
    "plot_short_horizon": 100.0,
    "_plot_short_horizon": "Time horizon (years) for short-term detailed plots"
  },

  "control_function": {
    "_description": "Not used for iterative refinement optimization (specified in optimization_parameters instead)",
    "type": "constant",
    "value": 0.5
  },

  "optimization_parameters": {
    "_description": "ITERATIVE REFINEMENT MODE: control_times is integer (number of iterations), initial_guess is scalar",
    "max_evaluations": 1000,
    "_max_evaluations": "Maximum number of objective function evaluations PER ITERATION",
    "control_times": 5,
    "_control_times": "INTEGER: Number of refinement iterations (iteration k produces 2^k + 1 control points). Final iteration will have 2^3 + 1 = 9 control points",
    "initial_guess": 0.5,
    "_initial_guess": "SCALAR: Initial f value for both t_start and t_end in first iteration. Subsequent iterations use PCHIP interpolation from previous solution",
    "_algorithm_note": "Optional: specify NLopt algorithm. Omit to use default (LN_BOBYQA). Local algorithms recommended for iterative refinement.",
    "algorithm": "GN_ISRES",
    "_algorithm": "Using default LN_BOBYQA (local derivative-free, good for smooth problems)",
    "_stopping_criteria": "Optional NLopt stopping criteria (omit to use NLopt defaults)",
    "ftol_rel": 1e-6,
    "_ftol_rel": "Relative tolerance on objective function",
    "xtol_rel": 1e-6,
    "_xtol_rel": "Relative tolerance on parameters"
  }
}
