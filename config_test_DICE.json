{
  "run_name": "DICE",
  "description": "Baseline scenario using GN_ISRES",
  "scalar_parameters": {
    "alpha": 0.3,
    "_alpha": "Capital share of income",
    "delta": 0.1,
    "_delta": "Capital depreciation rate (10% per year)",
    "psi1": 0,
    "_psi1": "Linear climate damage coefficient (°C⁻¹) [Barrage & Nordhaus 2023]",
    "psi2": 0.003467,
    "_psi2": "Quadratic climate damage coefficient (°C⁻²) [2x 0.003467 from Barrage & Nordhaus 2023]",
    "y_damage_halfsat": 1e+20,
    "_y_damage_halfsat": "Income level ($) at which climate damage is half of maximum (lower = more regressive damage). Set very high (e.g., 1e12) for uniform damage",
    "k_climate": 5e-13,
    "_k_climate": "Temperature sensitivity to cumulative  (K/tCO2) 0.5e-12 ~ 1.8 K per 1000 GtC [noe we are in CO2 units]",
    "eta": 0.95,
    "_eta": "Coefficient of relative risk aversion",
    "rho": 0.01,
    "_rho": "Pure rate of time preference (1 % per year)",
    "Gini_initial": 0.0,
    "_Gini_initial": "Initial Gini index (uniform)",
    "Gini_fract": 0.0,
    "_Gini_fract": "Fraction of effective Gini change that occurs as instantaneous step (0=no step change, 1=full step change) 0.1 means 10% of total change is step change",
    "Gini_restore": 0.0,
    "_Gini_restore": "Rate at which Gini restores to initial value (yr^-1, 0=no restoration, positive=restoration to Gini_initial) 0.1 means 10% per year restoration rate",
    "fract_gdp": 1.0,
    "_fract_gdp": "Fraction of GDP available for redistribution and abatement, >= 1.0 disables redistribution and places no bounds on abatement",
    "theta2": 2.6,
    "_theta2": "Abatement cost exponent",
    "mu_max": 1.2,
    "_mu_max": "Maximum allowed abatement fraction (cap on μ). Values >1 allow carbon removal.",
    "Ecum_initial": 2494300000000.0,
    "_Ecum_initial": "Initial cumulative CO2 emissions (tCO2). Set to 0 for no prior emissions. 1.24715/k_climate to match 2020 Barrage & Nordhaus 2023."
  },
  "time_functions": {
    "_description": "Time-dependent exogenous functions",
    "A": {
      "_description": "Total factor productivity (TFP)",
      "type": "gompertz_growth",
      "initial_value": 739.619,
      "_initial_value": "DICE is 5.84 with capital stock in trillions; pop in millions",
      "final_value": 4906815.811,
      "_final_value": "DICE is 38743.985 with capital stock in trillions; pop in millions",
      "adjustment_coefficient": -0.0015,
      "_adjustment_coefficient": "analytic representation of Barrage and Nordhaus 2023 TFP projection"
    },
    "L": {
      "_description": "Population",
      "type": "gompertz_growth",
      "initial_value": 7752000000.0,
      "final_value": 10825000000.0,
      "adjustment_coefficient": -0.03133,
      "_adjustment_coefficient": "analytic representation of Barrage and Nordhaus 2023 population projection"
    },
    "sigma": {
      "_description": "Carbon intensity of GDP",
      "type": "gompertz_growth",
      "initial_value": 0.000291355,
      "_initial_value": "tons CO2 per $, from kg per $ in Barage & Nordhaus 2023",
      "final_value": 4.4681e-05,
      "_final_value": "tons CO2 per $, from kgCO2 per $ in Barage & Nordhaus 2023",
      "adjustment_coefficient": -0.008164,
      "_adjustment_coefficient": "analytic representation of Barrage and Nordhaus 2023 carbon intensity projection"
    },
    "theta1": {
      "_description": "Abatement cost per ton of CO2 for the last ton abated ($/tCO2)",
      "type": "double_exponential_growth",
      "initial_value": 695.177385,
      "_initial_value": "Best 2 double exponential fit to Barage & Nordhaus 2023",
      "growth_rate_1": -0.023,
      "_growth_rate_1": "2-exponential fit to sigma in Barrage & Nordhaus 2023",
      "growth_rate_2": -0.00065,
      "_growth_rate_2": "2-exponential fit to sigma in Barrage & Nordhaus 2023",
      "fract_1": 0.310452,
      "_fract_1": "2-exponential fit to sigma in Barrage & Nordhaus 2023"
    }
  },
  "integration_parameters": {
    "_description": "Time integration settings",
    "t_start": 0.0,
    "t_end": 400,
    "_t_end": "Integrate for 400 years",
    "dt": 1.0,
    "_dt": "1-year time step (Euler method)",
    "rtol": 1e-06,
    "atol": 1e-09,
    "_tolerances": "Reserved for future adaptive solvers",
    "plot_short_horizon": 100.0,
    "_plot_short_horizon": "Time horizon (years) for short-term detailed plots. Creates second PDF book with results from t_start to this time."
  },
 "optimization_parameters": {
    "_description": "ITERATIVE REFINEMENT MODE: control_times is integer (number of iterations), initial_guess is scalar",
    "max_evaluations": 10000,
    "_max_evaluations": "Maximum number of objective function evaluations PER ITERATION",
    "control_times": 3,
    "_control_times": "INTEGER: Number of refinement iterations. Final iteration will have n_points_final_f control points if specified.",
    "initial_guess_f": 0.5,
    "_initial_guess_f": "SCALAR: Initial f value for both t_start and t_end in first iteration. Subsequent iterations use PCHIP interpolation from previous solution",
    "bounds_f": [0.0, 1.0],
    "_bounds_f": "Bounds for f (abatement fraction) as [min, max]. Default: [0.0, 1.0]",
    "n_points_final_f": 20,
    "_n_points_final_f": "Target number of f control points in final iteration. Refinement base = (n_points_final_f - 1)^(1/(n_iterations - 1)). Omit to use default base=2.0",
    "initial_guess_s": 0.28,
    "_initial_guess_s": "SCALAR: Initial s value for both t_start and t_end in first iteration. Presence of this field enables dual optimization of both f and s.",
      "bounds_s": [0.2, 0.3],
    "_bounds_s": "Bounds for s (savings rate) as [min, max]. Default: [0.0, 1.0]. Example: [0.2, 0.3] constrains savings between 20-30%",
    "n_points_final_s": 10,
    "_n_points_final_s": "Target number of s control points in final iteration. Can differ from n_points_final_f to allow different temporal resolution for each variable.",
    "_algorithm_note": "Optional: specify NLopt algorithm. Omit to use default (LN_SBPLX). Local algorithms recommended for iterative refinement.",
    "algorithm": "LN_SBPLX",
    "_algorithm": "LN_SBPLX (local derivative-free Subplex, default, robust for noisy objectives)",
    "_stopping_criteria": "NLopt stopping criteria. For f,s ∈ [0,1], absolute tolerance makes more sense than relative.",
    "xtol_abs": 1e-10,
    "_xtol_abs": "Absolute tolerance on control parameters (f,s values): stops when all |Δf|,|Δs| < 1e-10. Appropriate since f,s ∈ [0,1]."
  }
}